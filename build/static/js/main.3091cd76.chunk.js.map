{"version":3,"sources":["HeaderOption.js","firebase.js","features/userSlice.js","Header.js","Sidebar.js","InputOption.js","Post.js","Feed.js","Login.js","Widgets.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["HeaderOption","avatar","Icon","title","onClick","className","Avatar","src","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","Header","dispatch","useDispatch","alt","placeholder","type","HomeIcon","SupervisorAccountIcon","BusinessCenterIcon","ChatIcon","NotificationsIcon","signOut","sidebar","recentItem","topic","InputOption","color","style","Post","description","message","photoUrl","ThumbUpAltIcon","CommentIcon","ShareIcon","SendIcon","Feed","useState","input","setinput","posts","setPosts","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","value","onChange","e","target","preventDefault","add","timestamps","FieldValue","serverTimestamp","ImageIcon","OndemandVideoIcon","EventIcon","EventNoteIcon","Login","Widgets","newsArticle","heading","subtitle","App","store","configureStore","reducer","counter","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kbAceA,MAVf,YAAqD,IAA9BC,EAA6B,EAA7BA,OAAOC,EAAsB,EAAtBA,KAAKC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,QACtC,OACA,sBAAKA,QAASA,EAASC,UAAU,eAAjC,UACSH,GAAQ,cAACA,EAAD,CAAMG,UAAU,uBACxBJ,GAAU,cAACK,EAAA,EAAD,CAAQD,UAAU,qBAAqBE,IAAI,aACtD,oBAAIF,UAAU,sBAAd,SAAqCF,Q,6FCIzCK,G,MADYC,IAASC,cATN,CACnBC,OAAQ,0CACRC,WAAY,uCACZC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,eACnBC,MAAO,8CAIaC,aAChBC,EAAMT,IAASS,O,gBCXVC,EAAYC,YAAY,CACnCC,KAAM,OACNC,aAAc,CACZC,KAAK,MAGPC,SAAU,CACRC,MAAO,SAACC,EAAOC,GACbD,EAAMH,KAAOI,EAAOC,SAItBC,OAAQ,SAACH,GACPA,EAAMH,KAAO,SAMZ,EAAyBJ,EAAUW,QAArBD,GAAd,EAAQJ,MAAR,EAAcI,QAMNV,IAAf,QCoBeY,MAnCf,WAEI,IAAMC,EAAWC,cAOjB,OACI,sBAAK5B,UAAU,SAAf,UAEI,sBAAKA,UAAU,eAAf,UACI,qBAAKE,IAAI,+DAA+D2B,IAAI,KAE5E,sBAAK7B,UAAU,iBAAf,UACI,cAAC,IAAD,IACA,uBAAO8B,YAAY,SAASC,KAAK,eAKzC,sBAAK/B,UAAU,gBAAf,UACI,cAAC,EAAD,CAAcH,KAAMmC,IAAUlC,MAAM,SACpC,cAAC,EAAD,CAAcD,KAAMoC,IAAuBnC,MAAM,eACjD,cAAC,EAAD,CAAcD,KAAMqC,IAAoBpC,MAAM,SAC9C,cAAC,EAAD,CAAcD,KAAMsC,IAAUrC,MAAM,cACpC,cAAC,EAAD,CAAcD,KAAMuC,IAAmBtC,MAAM,kBAC7C,cAAC,EAAD,CAAcF,OAAO,yHAAyHE,MAAM,KAAKC,QAxBnJ,WACd4B,EAASH,KACTX,EAAKwB,oB,MCyBEC,MAxCf,WAEI,IAAMC,EAAa,SAACC,GAAD,OAEf,sBAAKxC,UAAU,sBAAf,UACI,sBAAMA,UAAU,gBAAhB,eACA,4BAAIwC,QAIZ,OACI,sBAAKxC,UAAU,UAAf,UACI,sBAAKA,UAAU,eAAf,UACI,qBAAKE,IAAI,kKAAkK2B,IAAI,KAC/K,cAAC5B,EAAA,EAAD,CAAQD,UAAU,oBAClB,4CACA,6DAEJ,sBAAKA,UAAU,iBAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,gDACA,mBAAGA,UAAU,sBAAb,sBAEJ,sBAAKA,UAAU,gBAAf,UACA,mDACI,mBAAGA,UAAU,sBAAb,yBAIR,sBAAKA,UAAU,kBAAf,UACI,uCACCuC,EAAW,WACXA,EAAW,eACXA,EAAW,aACXA,EAAW,8B,qCC1BbE,MATf,YAA0C,IAApB5C,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,MAAM4C,EAAQ,EAARA,MAC7B,OACI,sBAAK1C,UAAU,cAAf,UACI,cAACH,EAAD,CAAM8C,MAAO,CAACD,MAAMA,KACpB,6BAAK5C,Q,gJC2BF8C,MAzBf,YAAyD,IAAzC5B,EAAwC,EAAxCA,KAAM6B,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,QAC/B,OADoD,EAAZC,SAEpC,sBAAK/C,UAAU,OAAf,UACI,sBAAKA,UAAU,eAAf,UACI,cAACC,EAAA,EAAD,IACA,sBAAKD,UAAU,aAAf,UACI,6BAAKgB,IACL,4BAAI6B,UAGZ,qBAAK7C,UAAU,aAAf,SACI,4BAAI8C,MAGR,sBAAK9C,UAAU,gBAAf,UACI,cAAC,EAAD,CAAaH,KAAMmD,IAAgBlD,MAAM,OAAO4C,MAAM,SACtD,cAAC,EAAD,CAAa7C,KAAMoD,IAAanD,MAAM,UAAU4C,MAAM,SACtD,cAAC,EAAD,CAAa7C,KAAMqD,IAAWpD,MAAM,QAAQ4C,MAAM,SAClD,cAAC,EAAD,CAAa7C,KAAMsD,IAAUrD,MAAM,OAAO4C,MAAM,gBCkDjDU,OAjEf,WAEI,MAAyBC,mBAAS,IAAlC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAyBF,mBAAS,IAAlC,mBAAOG,EAAP,KAAcC,EAAd,KAyBA,OAvBAC,qBAAU,WACNvD,EAAGwD,WAAW,SAASC,QAAQ,aAAa,QAAQC,YAAW,SAACC,GAAD,OAC7DL,EACIK,EAASC,KAAKC,KAAI,SAACC,GAAD,MAAS,CACvBC,GAAID,EAAIC,GACRC,KAAMF,EAAIE,iBAItB,IAeE,sBAAKnE,UAAU,OAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,sBAAKA,UAAU,cAAf,UACI,cAAC,IAAD,IACA,iCACI,uBAAOoE,MAAOd,EAAOe,SAAU,SAAAC,GAAC,OAAIf,EAASe,EAAEC,OAAOH,QAAQrC,KAAK,SACnE,wBAAQhC,QAnBb,SAACuE,GACZA,EAAEE,iBACFrE,EAAGwD,WAAW,SAASc,IAAI,CACvBzD,KAAK,aACL6B,YAAY,2BACZC,QAAQQ,EACRP,SAAS,GACT2B,WAAYtE,IAASQ,UAAU+D,WAAWC,oBAE9CrB,EAAS,KAUkCxB,KAAK,SAAhC,wBAIR,sBAAK/B,UAAU,qBAAf,UACI,cAAC,EAAD,CAAaH,KAAMgF,IAAW/E,MAAM,QAAQ4C,MAAM,YAClD,cAAC,EAAD,CAAa7C,KAAMiF,IAAmBhF,MAAM,QAAQ4C,MAAM,YAC1D,cAAC,EAAD,CAAa7C,KAAMkF,IAAWjF,MAAM,QAAQ4C,MAAM,YAClD,cAAC,EAAD,CAAa7C,KAAMmF,IAAelF,MAAM,gBAAgB4C,MAAM,kBAMrEc,EAAMQ,KAAI,gBAAEE,EAAF,EAAEA,GAAF,IAAKC,KAAMnD,EAAX,EAAWA,KAAK6B,EAAhB,EAAgBA,YAAYC,EAA5B,EAA4BA,QAAQC,EAApC,EAAoCA,SAApC,OACP,cAAC,EAAD,CAEI/B,KAAMA,EACN6B,YAAaA,EACbC,QAASA,EACTC,SAAUA,GAJLmB,MAtBjB,Q,YCsDOe,I,wCC5DAC,OA9Bf,WAEI,IAAMC,EAAa,SAACC,EAAQC,GAAT,OACf,sBAAKrF,UAAU,mBAAf,UACI,qBAAKA,UAAU,uBAAf,SACI,cAAC,KAAD,MAGJ,sBAAKA,UAAU,wBAAf,UACI,6BAAKoF,IACL,4BAAIC,WAMhB,OACI,sBAAKrF,UAAU,UAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,+CACA,cAAC,KAAD,OAEHmF,EAAY,uBAAuB,aACnCA,EAAY,wCAAwC,mBACpDA,EAAY,uBAAuB,iBCoCjCG,OAtDf,WA0BE,OACE,sBAAKtF,UAAU,MAAf,UAGE,cAAC,EAAD,IAKA,sBAAKA,UAAU,YAAf,UAGE,cAAC,EAAD,IAGA,cAAC,GAAD,IAEA,cAAC,GAAD,WCnDKuF,GAAQC,YAAe,CAClCC,QAAS,CACPC,QAASC,KCOOC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUZ,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJa,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAACC,GAClCA,EAAaC,kB","file":"static/js/main.3091cd76.chunk.js","sourcesContent":["import { Avatar } from '@material-ui/core';\r\nimport React from 'react';\r\nimport './HeaderOption.css';\r\n\r\nfunction HeaderOption({avatar,Icon,title, onClick}) {\r\n    return (\r\n    <div onClick={onClick} className=\"headerOption\">\r\n            {Icon && <Icon className=\"headerOption__icon\" />}\r\n            {avatar && <Avatar className=\"headerOption__icon\" src=\"{avatar}\" />}\r\n            <h3 className=\"headerOption__title\">{title}</h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HeaderOption\r\n","import firebase from 'firebase';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAAsVvxwv_80rHdDho82LkyqbM3A3w7abs\",\r\n    authDomain: \"linkedin-clone-1f3d7.firebaseapp.com\",\r\n    projectId: \"linkedin-clone-1f3d7\",\r\n    storageBucket: \"linkedin-clone-1f3d7.appspot.com\",\r\n    messagingSenderId: \"821315076056\",\r\n    appId: \"1:821315076056:web:bc56efd417e4b70ee1bcad\"\r\n  };\r\n\r\n  const firebaseApp=firebase.initializeApp(firebaseConfig);\r\n  const db= firebaseApp.firestore();\r\n  const auth= firebase.auth();\r\n\r\n  export {db, auth};","import { createSlice } from '@reduxjs/toolkit';\n\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    user:null,\n  },\n\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n\n\n    logout: (state) => {\n      state.user = null;\n    },\n  },\n  \n});\n\nexport const { login,logout } = userSlice.actions;\n\n//Selectors: allows us to pull user info\nexport const selectUser = (state) => state.user; \n\n\nexport default userSlice.reducer;\n","import React from 'react';\r\nimport './Header.css';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport HeaderOption from './HeaderOption';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport BusinessCenterIcon from '@material-ui/icons/BusinessCenter';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { auth } from './firebase';\r\nimport { useDispatch } from 'react-redux';\r\nimport { logout } from './features/userSlice';\r\n\r\nfunction Header() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const logoutOfApp=()=>{\r\n        dispatch(logout())\r\n        auth.signOut();\r\n    };\r\n\r\n    return (\r\n        <div className=\"header\">\r\n          \r\n            <div className=\"header__left\">\r\n                <img src=\"https://www.flaticon.com/svg/static/icons/svg/174/174857.svg\" alt=\"\"/>\r\n\r\n                <div className=\"header__search\">\r\n                    <SearchIcon />\r\n                    <input placeholder=\"Search\" type=\"text\"/>\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n            <div className=\"header__right\">\r\n                <HeaderOption Icon={HomeIcon} title='Home'/>\r\n                <HeaderOption Icon={SupervisorAccountIcon} title='My Network'/>\r\n                <HeaderOption Icon={BusinessCenterIcon} title='Jobs'/>\r\n                <HeaderOption Icon={ChatIcon} title='Messaging'/>\r\n                <HeaderOption Icon={NotificationsIcon} title='Notifications'/>\r\n                <HeaderOption avatar=\"https://png.pngtree.com/png-vector/20190704/ourlarge/pngtree-businessman-user-avatar-free-vector-png-image_1538405.jpg\" title='Me' onClick={logoutOfApp} />\r\n            </div>            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import { Avatar } from '@material-ui/core';\r\nimport React from 'react';\r\nimport './Sidebar.css';\r\n\r\nfunction sidebar() {\r\n\r\n    const recentItem = (topic) => (\r\n    \r\n        <div className=\"sidebar__recentItem\">\r\n            <span className=\"sidebar__hash\">#</span>\r\n            <p>{topic}</p>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar__top\">\r\n                <img src=\"https://images.unsplash.com/photo-1513151233558-d860c5398176?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8ZnVuJTIwYmFja2dyb3VuZHxlbnwwfHwwfHw%3D&w=1000&q=80\" alt=\"\"/>\r\n                <Avatar className=\"sidebar__avatar\"/>\r\n                <h2>Vishal Das</h2>\r\n                <h4>vishal.das0911@gmail.com</h4>\r\n            </div>\r\n            <div className=\"sidebar__stats\">\r\n                <div className=\"sidebar__stat\">\r\n                    <p>Who viewed you?</p>\r\n                    <p className=\"sidebar__statNumber\">3,500</p>\r\n                </div>\r\n                <div className=\"sidebar__stat\">\r\n                <p>Views on your post</p>\r\n                    <p className=\"sidebar__statNumber\">1,000</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar__bottom\">\r\n                <p>Recent</p>\r\n                {recentItem(\"Reactjs\")}\r\n                {recentItem('Programming')}\r\n                {recentItem('developer')}\r\n                {recentItem('softwareengineering')}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default sidebar\r\n","import React from 'react';\r\nimport './InputOption.css';\r\n\r\nfunction InputOption({Icon,title,color}) {\r\n    return (\r\n        <div className=\"inputOption\">\r\n            <Icon style={{color:color}}/>\r\n            <h4>{title}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputOption\r\n","import { Avatar } from '@material-ui/core';\r\nimport React from 'react';\r\nimport InputOption from './InputOption';\r\nimport './Post.css';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nfunction Post({ name, description, message, photoUrl }) {\r\n    return (\r\n        <div className=\"post\">\r\n            <div className=\"post__header\">\r\n                <Avatar />\r\n                <div className=\"post__info\">\r\n                    <h2>{name}</h2>\r\n                    <p>{description}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"post__body\">\r\n                <p>{message}</p>\r\n            </div>\r\n\r\n            <div className=\"post__buttons\">\r\n                <InputOption Icon={ThumbUpAltIcon} title=\"Like\" color=\"gray\" />\r\n                <InputOption Icon={CommentIcon} title=\"Comment\" color=\"gray\" />\r\n                <InputOption Icon={ShareIcon} title=\"Share\" color=\"gray\" />\r\n                <InputOption Icon={SendIcon} title=\"Send\" color=\"gray\" />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","import CreateIcon from '@material-ui/icons/Create';\r\nimport React, { useState, useEffect } from 'react';\r\nimport './Feed.css';\r\nimport InputOption from './InputOption';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport OndemandVideoIcon from '@material-ui/icons/OndemandVideo';\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport EventNoteIcon from '@material-ui/icons/EventNote';\r\nimport Post from './Post';\r\nimport {db} from './firebase';\r\nimport firebase from 'firebase';\r\n\r\nfunction Feed() {\r\n\r\n    const [input, setinput]= useState(\"\");\r\n    const [posts, setPosts]= useState([]);\r\n\r\n    useEffect(() => {\r\n        db.collection(\"posts\").orderBy(\"timestamps\",\"desc\").onSnapshot((snapshot)=>\r\n          setPosts(\r\n              snapshot.docs.map((doc) =>({\r\n                  id: doc.id,\r\n                  data: doc.data(),\r\n              }))\r\n          )\r\n        );\r\n    },[]);\r\n\r\n    const sendPost=(e)=>{\r\n        e.preventDefault();\r\n        db.collection(\"posts\").add({\r\n            name:'Vishal Das',\r\n            description:'worked in linkedin clone',\r\n            message:input,\r\n            photoUrl:'',\r\n            timestamps: firebase.firestore.FieldValue.serverTimestamp(),\r\n        })\r\n        setinput(\"\");\r\n    };\r\n    \r\n    return (\r\n        <div className=\"feed\">\r\n            <div className=\"feed__inputcontainer\">\r\n                <div className=\"feed__input\">\r\n                    <CreateIcon />\r\n                    <form>\r\n                        <input value={input} onChange={e => setinput(e.target.value)} type=\"text\"/>\r\n                        <button onClick={sendPost} type=\"submit\">Send</button>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"feed__inputOptions\">\r\n                    <InputOption Icon={ImageIcon} title='Photo' color=\"#70B5F9\" />\r\n                    <InputOption Icon={OndemandVideoIcon} title='Video' color=\"#E7A33E\" />\r\n                    <InputOption Icon={EventIcon} title='Event' color=\"#C0CBCD\" />\r\n                    <InputOption Icon={EventNoteIcon} title='Write article' color=\"#7FC15E\" />\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {/* {Post Section} */}\r\n            {posts.map(({id,data:{name,description,message,photoUrl}})=>(\r\n                <Post\r\n                    key={id} \r\n                    name={name} \r\n                    description={description} \r\n                    message={message} \r\n                    photoUrl={photoUrl}\r\n                />\r\n            )\r\n\r\n            )};\r\n  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from './features/userSlice';\r\nimport { auth } from './firebase';\r\nimport './Login.css';\r\n\r\n\r\nfunction Login() {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [profilePic, setProfilePic] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n\r\n    const loginToApp = (e) => {\r\n        e.preventDefault();\r\n\r\n        auth.signInWithEmailAndPassword(email, password)\r\n            .then((userAuth) => {\r\n                dispatch(login({\r\n                    email: userAuth.user.email,\r\n                    uid: userAuth.user.uid,\r\n                    displayName: userAuth.user.displayName,\r\n                    profileUrl:userAuth.user.photoURL,\r\n                }))\r\n            })\r\n            .catch((error) => alert(error));\r\n    };\r\n\r\n    const register = () => {\r\n        if (!name) {\r\n            return alert(\"Please enter a full name\")\r\n        }\r\n\r\n        auth.createUserWithEmailAndPassword(email, password)\r\n            .then((userAuth) => {\r\n                userAuth.user.updateProfile({\r\n                    \r\n                    displayName: name,\r\n                    photoURL: profilePic,\r\n                })\r\n                    .then(() => {\r\n                        dispatch(\r\n                            login({\r\n                                email: userAuth.user.email,\r\n                                uid: userAuth.user.uid,\r\n                                displayName: name,\r\n                                photoURL: profilePic,\r\n                            })\r\n                        );\r\n                    });\r\n            })\r\n            .catch((error) => alert(error));\r\n    };\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTTajPFYh4FEc7ngzHJmVrKwXOz-4iko5pyePB0vyA-BatdwEM98Vjelj_x-sCwSRHpaA&usqp=CAU\"\r\n                alt=\"\" />\r\n\r\n            <form>\r\n                <input\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    placeholder=\"Full Name (Required if registering)\"\r\n                    type=\"text\" />\r\n\r\n                <input\r\n                    value={profilePic}\r\n                    onChange={(e) => setProfilePic(e.target.value)}\r\n                    placeholder=\"Profile Pic (Optional)\"\r\n                    type=\"text\" />\r\n\r\n                <input\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    placeholder=\"Email\"\r\n                    type=\"email\" />\r\n\r\n                <input\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    placeholder=\"Password\"\r\n                    type=\"password\" />\r\n\r\n                <button type=\"submit\" onClick={loginToApp}>Sign In</button>\r\n            </form>\r\n            <p>Not a member?{\" \"}\r\n                <span className=\"login__register\" onClick={register}>Register Now</span>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react';\r\nimport './Widgets.css';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\r\n\r\nfunction Widgets() {\r\n\r\n    const newsArticle= (heading,subtitle) => (\r\n        <div className=\"widgets__article\">\r\n            <div className=\"widgets__articleleft\">\r\n                <BookmarkBorderIcon/>\r\n                \r\n            </div>\r\n            <div className=\"widgets__articleright\">\r\n                <h4>{heading}</h4>\r\n                <p>{subtitle}</p>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div className=\"widgets\">\r\n            <div className=\"widgets__header\">\r\n                <h2>LinkedIn News</h2>\r\n                <InfoIcon />\r\n            </div>\r\n            {newsArticle(\"This is just a clone\",\"by Vishal\")}\r\n            {newsArticle(\"Next I am gonna work on Netflix-clone\",\"by Vishal again\")}\r\n            {newsArticle(\"This is a great news\",\"by Vishal\")}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Widgets\r\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport Feed from './Feed';\nimport { login, logout, selectUser } from './features/userSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Login from './Login';\nimport { auth } from './firebase';\nimport Widgets from './Widgets';\n\nfunction App() {\n\n  /*\n   const user= useSelector(selectUser);\n   const dispatch = useDispatch();\n \n   useEffect(()=>{\n     auth.onAuthStateChanged((userAuth)=>{\n       if(userAuth){\n         //user is logged in\n         dispatch(login({\n           email:userAuth.email,\n           uid:userAuth.uid,\n           displayName:userAuth.displayName,\n           photoUrl:userAuth.photoURL,\n         }))\n       } else{\n         //user is logged out\n         dispatch(logout());\n       }\n     })\n \n   },[]);\n  */\n\n\n  return (\n    <div className=\"app\">\n\n      {/* {Header} */}\n      <Header />\n\n      {/* { !user ? (\n        <Login />\n      ) : ( */}\n      <div className=\"app__body\">\n        {/* {App body} */}\n        {/* {sidebar} */}\n        <Sidebar />\n\n        {/* {Feed} */}\n        <Feed />\n        {/* {widgets} */}\n        <Widgets/>\n      </div>\n\n      {/* )\n      \n      };  */}\n\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from '../features/userSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: userReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}